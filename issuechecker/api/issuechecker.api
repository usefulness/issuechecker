public abstract interface class com/starter/issuechecker/CheckResult {
}

public final class com/starter/issuechecker/CheckResult$Error : com/starter/issuechecker/CheckResult {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Throwable;
	public final fun copy (Ljava/lang/String;Ljava/lang/Throwable;)Lcom/starter/issuechecker/CheckResult$Error;
	public static synthetic fun copy$default (Lcom/starter/issuechecker/CheckResult$Error;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lcom/starter/issuechecker/CheckResult$Error;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIssueUrl ()Ljava/lang/String;
	public final fun getThrowable ()Ljava/lang/Throwable;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/starter/issuechecker/CheckResult$Success : com/starter/issuechecker/CheckResult {
	public fun <init> (Ljava/lang/String;Lcom/starter/issuechecker/IssueStatus;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lcom/starter/issuechecker/IssueStatus;
	public final fun copy (Ljava/lang/String;Lcom/starter/issuechecker/IssueStatus;)Lcom/starter/issuechecker/CheckResult$Success;
	public static synthetic fun copy$default (Lcom/starter/issuechecker/CheckResult$Success;Ljava/lang/String;Lcom/starter/issuechecker/IssueStatus;ILjava/lang/Object;)Lcom/starter/issuechecker/CheckResult$Success;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getIssueStatus ()Lcom/starter/issuechecker/IssueStatus;
	public final fun getIssueUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/starter/issuechecker/IssueChecker {
	public fun <init> (Lcom/starter/issuechecker/IssueChecker$Config;)V
	public final fun findAllLinks (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun report (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/starter/issuechecker/IssueChecker$Config {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Lokhttp3/OkHttpClient;Ljava/util/concurrent/Executor;)V
	public synthetic fun <init> (Ljava/lang/String;Lokhttp3/OkHttpClient;Ljava/util/concurrent/Executor;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lokhttp3/OkHttpClient;
	public final fun component3 ()Ljava/util/concurrent/Executor;
	public final fun copy (Ljava/lang/String;Lokhttp3/OkHttpClient;Ljava/util/concurrent/Executor;)Lcom/starter/issuechecker/IssueChecker$Config;
	public static synthetic fun copy$default (Lcom/starter/issuechecker/IssueChecker$Config;Ljava/lang/String;Lokhttp3/OkHttpClient;Ljava/util/concurrent/Executor;ILjava/lang/Object;)Lcom/starter/issuechecker/IssueChecker$Config;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExecutor ()Ljava/util/concurrent/Executor;
	public final fun getGithubToken ()Ljava/lang/String;
	public final fun getOkHttpClient ()Lokhttp3/OkHttpClient;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/starter/issuechecker/IssueCheckerKt {
	public static final fun findAllLinksBlocking (Lcom/starter/issuechecker/IssueChecker;Ljava/lang/String;)Ljava/util/Collection;
	public static final fun reportBlocking (Lcom/starter/issuechecker/IssueChecker;Ljava/lang/String;)Ljava/util/Collection;
}

public final class com/starter/issuechecker/IssueStatus : java/lang/Enum {
	public static final field Closed Lcom/starter/issuechecker/IssueStatus;
	public static final field Open Lcom/starter/issuechecker/IssueStatus;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/starter/issuechecker/IssueStatus;
	public static fun values ()[Lcom/starter/issuechecker/IssueStatus;
}

